y='Deaths Attributable to Smoking (per 100,000 residents)',
fill='Age',
color='Age') +
facet_wrap(~sex) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
smokeDeathsByYear
propAttrib <- ageData %>%
ggplot() +
geom_line(mapping=aes(x=age5,y=attribPct*100,color=as.factor(year))) +
geom_point(mapping=aes(x=age5,y=attribPct*100,fill=as.factor(year)),shape=21,size=3) +
scale_shape_manual(values=c(21,22,23)) +
scale_fill_discrete_sequential() +
scale_color_discrete_sequential() +
labs(x='Age',
y='% of All Deaths Attributable to Smoking',
color='Year',
fill='Year') +
facet_wrap(~sex) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
propAttrib
# Read specific municipality at a given year
states <- read_state(code_state='all')
states <- sf::st_simplify(states,dTolerance = 1000)
stateData <- predData %>%
group_by(state_abb,year,sex,age5) %>%
summarise(nDx = sum(nDx),
nDx_lc = sum(nDx_lc),
nDx_lc_S = sum(nDx_lc_S),
nDx_smoke = sum(nDx_smoke),
nDx_pred = sum(nDx_pred),
nNx = sum(nNx)) %>%
ungroup() %>%
mutate(attribPct = (nDx_smoke+nDx_lc_S)/nDx)
mapData <- predData %>%
left_join(ageStandard,by='age5') %>%
group_by(state_abb,year,sex) %>%
summarise(m_smoke_std = sum(((nDx_smoke+nDx_lc_S)/nNx)*(stdProp/sum(stdProp)))*100000,
nDx_smoke = sum(nDx_smoke),
nDx_lc_S = sum(nDx_lc_S),
nDx = sum(nDx)) %>%
ungroup() %>%
mutate(attribPct = ((nDx_smoke+nDx_lc_S)/nDx)*100)
mapData <- states %>%
right_join(mapData,by=c('abbrev_state'='state_abb'))
stateData %>%
group_by(year,sex) %>%
summarise(pctAttrib=sum(nDx_smoke+nDx_lc_S)/sum(nDx),
nDx_smoke=sum(nDx_smoke+nDx_lc_S))
smokeMortalityByYearMales <- mapData %>%
filter(sex=='Males') %>%
ggplot() +
geom_sf(mapping=aes(fill=m_smoke_std)) +
scale_fill_continuous_sequential() +
labs(fill='Age Standardized Mortality Rates\nfrom Smoking-Related Deaths (per 100,000 residents)') +
facet_wrap(~year,ncol=4) +
theme_map() +
coord_sf(expand = F, clip = 'off') +
guides(colour = guide_colourbar(title.position = "right")) +
theme(legend.position = c(0.5, -0.25),
legend.justification = c(0.5, 0),
legend.direction = 'horizontal',
legend.title = element_text(size = 10, angle = 0),
legend.title.align = 0.5,
plot.margin = unit(c(1,1,5,1), "lines"))
smokeMortalityByYearMales
attribDeathsByYearMales <- mapData %>%
filter(sex=='Males') %>%
ggplot() +
geom_sf(mapping=aes(fill=attribPct)) +
scale_fill_continuous_sequential() +
labs(fill='% of All Deaths Attributable to Smoking') +
facet_wrap(~year,ncol=4) +
theme_map() +
coord_sf(expand = F, clip = 'off') +
guides(colour = guide_colourbar(title.position = "right")) +
theme(legend.position = c(0.5, -0.25),
legend.justification = c(0.5, 0),
legend.direction = 'horizontal',
legend.title = element_text(size = 10, angle = 0),
legend.title.align = 0.5,
plot.margin = unit(c(1,1,5,1), "lines"))
attribDeathsByYearMales
smokeMortalityByYearFemales <- mapData %>%
filter(sex=='Females') %>%
ggplot() +
geom_sf(mapping=aes(fill=m_smoke_std)) +
scale_fill_continuous_sequential() +
labs(fill='Age Standardized Mortality Rates\nfrom Smoking-Related Deaths (per 100,000 residents)') +
facet_wrap(~year,ncol=4) +
theme_map() +
coord_sf(expand = F, clip = 'off') +
guides(colour = guide_colourbar(title.position = "right")) +
theme(legend.position = c(0.5, -0.25),
legend.justification = c(0.5, 0),
legend.direction = 'horizontal',
legend.title = element_text(size = 10, angle = 0),
legend.title.align = 0.5,
plot.margin = unit(c(1,1,5,1), "lines"))
smokeMortalityByYearFemales
attribDeathsByYearFemales <- mapData %>%
filter(sex=='Females') %>%
ggplot() +
geom_sf(mapping=aes(fill=attribPct)) +
scale_fill_continuous_sequential() +
labs(fill='% of All Deaths Attributable to Smoking') +
facet_wrap(~year,ncol=4) +
theme_map() +
coord_sf(expand = F, clip = 'off') +
guides(colour = guide_colourbar(title.position = "right")) +
theme(legend.position = c(0.5, -0.25),
legend.justification = c(0.5, 0),
legend.direction = 'horizontal',
legend.title = element_text(size = 10, angle = 0),
legend.title.align = 0.5,
plot.margin = unit(c(1,1,5,1), "lines"))
attribDeathsByYearFemales
knitr::opts_chunk$set(
echo = FALSE,
warning = FALSE,
message = FALSE
)
# Loading necessary packages
library(VGAM)
library(lubridate)
library(USAboundaries)
library(here)
library(splines)
library(glue)
library(MASS)
library(geobr)
library(colorspace)
library(ggthemes)
library(tidyverse)
# Set seed for the Rmd
set.seed(42)
# Do not rely on this to completely clean your environment
# Better to do a full restart of R before running
rm(list=ls())
i_am('R/PGWAnalysis.Rmd')
dataDir <- here('data')
figDir <- here('figures')
brData <- arrow::read_feather(here(dataDir,'brfinaldata_2010_2021.feather'))
ageStandard <- brData %>%
group_by(age5) %>%
summarise(pop=sum(nNx)) %>%
ungroup() %>%
mutate(stdProp=pop/sum(pop)) %>%
select(-pop)
brData <- brData %>%
replace_na(list(nDx_lc=0)) %>%
mutate(age5=if_else(age5>=85,85,age5)) %>%
group_by(state_abb,year,sex,age5) %>%
summarise(across(c(nNx,nDx,nDx_lc), ~sum(.x))) %>%
ungroup() %>%
filter(between(age5,45,80),
year<=2019) %>%
mutate(nDx = nDx - nDx_lc,
nmx_lc = (nDx_lc/nNx)*1000)
#c('AL','AM','BA','CE','DF','ES','GO',
#                          'MA','MG','MS','MT','PA','PB','PR',
#                          'RJ','RN','RO','RS','SC','SE','SP')
brData %>%
filter(year==2017) %>%
ggplot() +
geom_line(mapping=aes(x=age5,y=log(nDx/nNx),color=sex)) +
facet_wrap(~state_abb)
brData %>%
filter(year==2017) %>%
ggplot() +
geom_line(mapping=aes(x=age5,y=nDx_lc/nNx,color=sex)) +
facet_wrap(~state_abb)
nestedData <- brData %>%
group_by(sex) %>%
nest()
PGWModels <- map(
nestedData$data,
~ glm.nb(nDx ~ 1 + as.factor(age5) + year + state_abb +
year:state_abb +
nmx_lc + nmx_lc:as.factor(age5):state_abb +
offset(log(nNx)),
data = .x,
link = 'log')
)
names(PGWModels) <- nestedData$sex
ageCoefs <- map2_dfr(
PGWModels,
names(PGWModels),
~ broom::tidy(.x) %>%
filter(str_detect(term,'age5\\)\\d+$')) %>%
mutate(x=as.integer(str_match(term,'\\d+$')),
estimate=estimate+coef(.x)['(Intercept)'],
sex=.y) %>%
add_row(
tibble(
x=45,
estimate=coef(.x)['(Intercept)'],
std.error=sqrt(vcov(.x)['(Intercept)','(Intercept)']),
sex=.y
)
)
) %>%
arrange(x)
ageCoefsPlot <- ageCoefs %>%
ggplot() +
geom_line(mapping=aes(x=x,y=estimate,linetype=sex)) +
geom_point(mapping=aes(x=x,y=estimate,shape=sex)) +
labs(x='Age',y='Coefficient on Main Effect of Age',
linetype='') +
theme_minimal()
ageCoefsPlot
svg(here('figures','ageCoefsPlot.svg'), width = 6, height = 4)
ageCoefsPlot
dev.off()
ggsave(here('figures','ageCoefsPlot.png'),ageCoefsPlot)
PGWCoefs <- tibble(
age5=rep(seq(50,80,5),each=2),
sex=rep(c('Males','Females'),7),
rate=c(
0.297,0.207,
0.186,0.175,
0.111,0.087,
0.073,0.085,
0.046,0.069,
0.027,0.056,
0.016,0.039
)
)
ageIntCoefs <- map2_dfr(
PGWModels,
names(PGWModels),
~ broom::tidy(.x) %>%
filter(str_detect(term,':nmx_lc$')) %>%
mutate(x=as.integer(str_match(term,'(\\d+):')[,2]),
state=str_match(term,'state_abb([A-Z]{2})')[,2],
sex=.y)
) %>%
arrange(x)
ageIntCoefsPlot <- ageIntCoefs %>%
ggplot() +
geom_line(mapping=aes(x=x,y=estimate,linetype=sex,color='Brazil')) +
#geom_linerange(mapping=aes(x=x,
#                        ymin=estimate-1.96*std.error,
#                        ymax=estimate+1.96*std.error,
#                        group=sex)) +
geom_line(data=PGWCoefs,mapping=aes(x=age5,y=rate,linetype=sex,color='US')) +
facet_wrap(~state) +
labs(x='Age',y='Coefficient on Interactions between\nAge and Lung CancerDeaths',
linetype='',
color='') +
theme_minimal()
ageIntCoefsPlot
svg(here('figures','ageIntCoefsPlot.svg'), width = 6, height = 4)
ageIntCoefsPlot
dev.off()
ggsave(here('figures','ageIntCoefsPlot.png'),ageIntCoefsPlot)
noSmokeRates <- tibble(
age5=rep(seq(25,85,5),each=2),
sex=rep(c('Males','Females'),13),
rate=c(0,0,0,0,0,0,0,0,0,0,0.055,0.058,
0.053,0.072,0.116,0.123,0.215,0.167,
0.349,0.305,0.520,0.325,0.892,0.576,
0.868,0.606)
)
newData <- brData %>%
left_join(noSmokeRates,by=c('age5','sex')) %>%
mutate(nDx_lc = (rate*nNx)/1000,
nmx_lc = rate)
predData <- map2_dfr(
PGWModels,
names(PGWModels),
~ tibble(
state_abb = brData %>% filter(sex==.y) %>% pull(state_abb),
year = brData %>% filter(sex==.y) %>% pull(year),
sex = .y,
age5 = brData %>% filter(sex==.y) %>% pull(age5),
nDx = brData %>% filter(sex==.y) %>% pull(nDx),
nDx_lc = brData %>% filter(sex==.y) %>% pull(nDx_lc),
nDx_lc_S = nDx_lc - newData %>% filter(sex==.y) %>% pull(nDx_lc),
nNx = brData %>% filter(sex==.y) %>% pull(nNx),
nDx_pred = predict(.x,brData %>% filter(sex==.y),type='response'),
nDx_pred_NS = predict(.x,newData %>% filter(sex==.y),type='response')
)
) %>%
mutate(nDx_lc_S = if_else(nDx_lc_S<0,0,nDx_lc_S),
nDx_smoke = nDx_pred - nDx_pred_NS,
nDx_smoke = if_else(nDx_smoke<0,0,nDx_smoke),
residual = nDx - nDx_smoke - nDx_lc_S,
attribPct = (nDx_smoke+nDx_lc_S)/nDx)
predVsObsPlot <- predData %>%
ggplot() +
geom_abline(intercept = 0, slope=1) +
geom_point(mapping=aes(x=nDx_pred,y=nDx),shape=21,alpha=0.2) +
coord_equal() +
labs(x='Predicted All-Cause Deaths (exc. Lung Cancer)',
y='Observed All-Cause Deaths (exc. Lung Cancer)') +
theme_minimal()
predVsObsPlot
svg(here('figures','predVsObsPlot.svg'), width = 8, height = 8)
predVsObsPlot
dev.off()
dropLinePlot <- predData %>%
ggplot() +
geom_abline(intercept = 0, slope=1, linewidth=0.8) +
geom_segment(mapping=aes(x=nDx_pred,y=nDx_pred,
xend=nDx_pred,yend=nDx_pred_NS)) +
coord_equal() +
labs(x='Predicted All-Cause Deaths (exc. Lung Cancer)',
y='Predicted All-Cause Deaths (exc. Lung Cancer)\nwithout Smoking') +
theme_minimal()
dropLinePlot
svg(here('figures','dropLinePlot.svg'), width = 8, height = 8)
dropLinePlot
dev.off()
ageData <- predData %>%
group_by(age5,year,sex) %>%
summarise(nDx = sum(nDx),
nDx_lc = sum(nDx_lc),
nDx_lc_S = sum(nDx_lc_S),
nDx_smoke = sum(nDx_smoke),
nNx = sum(nNx),
nDx_pred = sum(nDx_pred)) %>%
ungroup() %>%
mutate(nmx_smoke=((nDx_smoke+nDx_lc_S)/nNx)*100000,
attribPct=(nDx_smoke+nDx_lc_S)/nDx)
ageStdRates <- ageData %>%
left_join(ageStandard,by='age5') %>%
group_by(year,sex) %>%
summarise(m_smoke_std = sum(((nDx_smoke+nDx_lc_S)/nNx)*(stdProp/sum(stdProp)))*100000) %>%
ungroup()
ageStdRatesPlot <- ageStdRates %>%
ggplot() +
geom_line(mapping=aes(x=year,y=m_smoke_std,color=sex)) +
geom_point(mapping=aes(x=year,y=m_smoke_std,fill=sex),shape=21,size=3) +
coord_cartesian(ylim=c(0,max(ageStdRates$m_smoke_std))) +
labs(x='Year',
y='Age-Standardized Mortality Rate\nfor Deaths Attributable to Smoking',
fill='',
color='') +
theme_minimal()
ageStdRatesPlot
svg(here('figures','ageStdRatesPlot.svg'), width = 8, height = 8)
ageStdRatesPlot
dev.off()
smokeDeathsByAge <- ageData %>%
ggplot() +
geom_line(mapping=aes(x=age5,y=nmx_smoke,color=as.factor(year))) +
geom_point(mapping=aes(x=age5,y=nmx_smoke,fill=as.factor(year)),shape=21,size=3) +
scale_shape_manual(values=c(21,22,23)) +
scale_fill_discrete_sequential() +
scale_color_discrete_sequential() +
labs(x='Age',
y='Deaths Attributable to Smoking (per 100,000 residents)',
fill='Year',
color='Year') +
facet_wrap(~sex) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
smokeDeathsByAge
svg(here('figures','smokeDeathsByAge.svg'), width = 9, height = 6)
smokeDeathsByAge
dev.off()
smokeDeathsByYear <- ageData %>%
ggplot() +
geom_line(mapping=aes(x=year,y=nmx_smoke,color=as.factor(age5))) +
geom_point(mapping=aes(x=year,y=nmx_smoke,fill=as.factor(age5)),shape=21,size=3) +
scale_shape_manual(values=c(21,22,23)) +
scale_fill_discrete_sequential() +
scale_color_discrete_sequential() +
labs(x='Year',
y='Deaths Attributable to Smoking (per 100,000 residents)',
fill='Age',
color='Age') +
facet_wrap(~sex) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
smokeDeathsByYear
svg(here('figures','smokeDeathsByYear.svg'), width = 9, height = 6)
smokeDeathsByYear
dev.off()
propAttrib <- ageData %>%
ggplot() +
geom_line(mapping=aes(x=age5,y=attribPct*100,color=as.factor(year))) +
geom_point(mapping=aes(x=age5,y=attribPct*100,fill=as.factor(year)),shape=21,size=3) +
scale_shape_manual(values=c(21,22,23)) +
scale_fill_discrete_sequential() +
scale_color_discrete_sequential() +
labs(x='Age',
y='% of All Deaths Attributable to Smoking',
color='Year',
fill='Year') +
facet_wrap(~sex) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
propAttrib
svg(here('figures','propAttrib.svg'), width = 9, height = 6)
propAttrib
dev.off()
# Read specific municipality at a given year
states <- read_state(code_state='all')
states <- sf::st_simplify(states,dTolerance = 1000)
stateData <- predData %>%
group_by(state_abb,year,sex,age5) %>%
summarise(nDx = sum(nDx),
nDx_lc = sum(nDx_lc),
nDx_lc_S = sum(nDx_lc_S),
nDx_smoke = sum(nDx_smoke),
nDx_pred = sum(nDx_pred),
nNx = sum(nNx)) %>%
ungroup() %>%
mutate(attribPct = (nDx_smoke+nDx_lc_S)/nDx)
mapData <- predData %>%
left_join(ageStandard,by='age5') %>%
group_by(state_abb,year,sex) %>%
summarise(m_smoke_std = sum(((nDx_smoke+nDx_lc_S)/nNx)*(stdProp/sum(stdProp)))*100000,
nDx_smoke = sum(nDx_smoke),
nDx_lc_S = sum(nDx_lc_S),
nDx = sum(nDx)) %>%
ungroup() %>%
mutate(attribPct = ((nDx_smoke+nDx_lc_S)/nDx)*100)
mapData <- states %>%
right_join(mapData,by=c('abbrev_state'='state_abb'))
stateData %>%
group_by(year,sex) %>%
summarise(pctAttrib=sum(nDx_smoke+nDx_lc_S)/sum(nDx),
nDx_smoke=sum(nDx_smoke+nDx_lc_S))
smokeMortalityByYearMales <- mapData %>%
filter(sex=='Males') %>%
ggplot() +
geom_sf(mapping=aes(fill=m_smoke_std)) +
scale_fill_continuous_sequential() +
labs(fill='Age Standardized Mortality Rates\nfrom Smoking-Related Deaths (per 100,000 residents)') +
facet_wrap(~year,ncol=4) +
theme_map() +
coord_sf(expand = F, clip = 'off') +
guides(colour = guide_colourbar(title.position = "right")) +
theme(legend.position = c(0.5, -0.25),
legend.justification = c(0.5, 0),
legend.direction = 'horizontal',
legend.title = element_text(size = 10, angle = 0),
legend.title.align = 0.5,
plot.margin = unit(c(1,1,5,1), "lines"))
smokeMortalityByYearMales
svg(here('figures','smokeMortalityByYearMales.svg'), width = 8, height = 10)
smokeMortalityByYearMales
dev.off()
attribDeathsByYearMales <- mapData %>%
filter(sex=='Males') %>%
ggplot() +
geom_sf(mapping=aes(fill=attribPct)) +
scale_fill_continuous_sequential() +
labs(fill='% of All Deaths Attributable to Smoking') +
facet_wrap(~year,ncol=4) +
theme_map() +
coord_sf(expand = F, clip = 'off') +
guides(colour = guide_colourbar(title.position = "right")) +
theme(legend.position = c(0.5, -0.25),
legend.justification = c(0.5, 0),
legend.direction = 'horizontal',
legend.title = element_text(size = 10, angle = 0),
legend.title.align = 0.5,
plot.margin = unit(c(1,1,5,1), "lines"))
attribDeathsByYearMales
svg(here('figures','attribDeathsByYearMales.svg'), width = 8, height = 10)
attribDeathsByYearMales
dev.off()
smokeMortalityByYearFemales <- mapData %>%
filter(sex=='Females') %>%
ggplot() +
geom_sf(mapping=aes(fill=m_smoke_std)) +
scale_fill_continuous_sequential() +
labs(fill='Age Standardized Mortality Rates\nfrom Smoking-Related Deaths (per 100,000 residents)') +
facet_wrap(~year,ncol=4) +
theme_map() +
coord_sf(expand = F, clip = 'off') +
guides(colour = guide_colourbar(title.position = "right")) +
theme(legend.position = c(0.5, -0.25),
legend.justification = c(0.5, 0),
legend.direction = 'horizontal',
legend.title = element_text(size = 10, angle = 0),
legend.title.align = 0.5,
plot.margin = unit(c(1,1,5,1), "lines"))
smokeMortalityByYearFemales
svg(here('figures','smokeMortalityByYearFemales.svg'), width = 8, height = 10)
smokeMortalityByYearFemales
dev.off()
attribDeathsByYearFemales <- mapData %>%
filter(sex=='Females') %>%
ggplot() +
geom_sf(mapping=aes(fill=attribPct)) +
scale_fill_continuous_sequential() +
labs(fill='% of All Deaths Attributable to Smoking') +
facet_wrap(~year,ncol=4) +
theme_map() +
coord_sf(expand = F, clip = 'off') +
guides(colour = guide_colourbar(title.position = "right")) +
theme(legend.position = c(0.5, -0.25),
legend.justification = c(0.5, 0),
legend.direction = 'horizontal',
legend.title = element_text(size = 10, angle = 0),
legend.title.align = 0.5,
plot.margin = unit(c(1,1,5,1), "lines"))
attribDeathsByYearFemales
svg(here('figures','attribDeathsByYearFemales.svg'), width = 8, height = 10)
attribDeathsByYearFemales
dev.off()
